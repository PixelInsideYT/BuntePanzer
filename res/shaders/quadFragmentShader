#version 130
precision highp float;
uniform sampler2D picture;
uniform float color;
uniform int useCustomColor;
uniform float alpha;

uniform vec2 textureSize;

in vec2 uv;
out vec4 FragColor;


vec3 hsv2rgb(vec3 c) {
  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
}

void main()  {

	vec2 alphaFiltering = 0.5 * vec2(dFdx(uv.x), dFdy(uv.y));
	vec2 x = fract(uv);
	vec2 x_ = clamp(0.5 / alphaFiltering * x, 0.0, 0.5) + 
	clamp(0.5 / alphaFiltering * (x - 1.0) + 0.5, 0.0, 0.5);
	vec2 texCoord = (floor(uv) + x_) / textureSize;

    vec4 textureColor = texture(picture,texCoord);
    if(textureColor.a==0){
    	discard;
    }
    FragColor = vec4(hsv2rgb(vec3(color,1.0,textureColor.r))*useCustomColor,1.0);
    FragColor += vec4(textureColor.rgb,alpha)*(1-useCustomColor);
    FragColor.a=alpha;
}